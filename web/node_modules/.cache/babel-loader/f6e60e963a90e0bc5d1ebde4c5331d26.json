{"ast":null,"code":"import _slicedToArray from\"C:/code3/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/code3/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from\"react\";import{gql,useMutation}from\"@apollo/client\";import{jsx as _jsx}from\"react/jsx-runtime\";var UPLOAD_FILE=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    mutation ($file: Upload!) {\\n        createFile(file: $file)\\n    }\\n\"])));function Test(){var _useMutation=useMutation(UPLOAD_FILE),_useMutation2=_slicedToArray(_useMutation,1),mutate=_useMutation2[0];function onChange(_ref){var _ref$target=_ref.target,validity=_ref$target.validity,_ref$target$files=_slicedToArray(_ref$target.files,1),file=_ref$target$files[0];if(validity.valid)mutate({variables:{file:file}});}return/*#__PURE__*/_jsx(\"input\",{type:\"file\",required:true,onChange:onChange});}export default Test;","map":{"version":3,"sources":["C:/code3/web/src/routes/Test.js"],"names":["React","gql","useMutation","UPLOAD_FILE","Test","mutate","onChange","target","validity","files","file","valid","variables"],"mappings":"0SAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,WAAd,KAAiC,gBAAjC,C,2CAEA,GAAMC,CAAAA,WAAW,CAAGF,GAAH,4IAAjB,CAMA,QAASG,CAAAA,IAAT,EAAgB,CACZ,iBAAiBF,WAAW,CAACC,WAAD,CAA5B,8CAAOE,MAAP,kBAEA,QAASC,CAAAA,QAAT,MAKG,sBAJCC,MAID,CAHKC,QAGL,aAHKA,QAGL,8CAFKC,KAEL,IAFaC,IAEb,sBACC,GAAIF,QAAQ,CAACG,KAAb,CAAoBN,MAAM,CAAC,CAAEO,SAAS,CAAE,CAAEF,IAAI,CAAJA,IAAF,CAAb,CAAD,CAAN,CACvB,CAED,mBAAO,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,KAA3B,CAA4B,QAAQ,CAAEJ,QAAtC,EAAP,CACH,CAED,cAAeF,CAAAA,IAAf","sourcesContent":["import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst UPLOAD_FILE = gql`\r\n    mutation ($file: Upload!) {\r\n        createFile(file: $file)\r\n    }\r\n`;\r\n\r\nfunction Test() {\r\n    const [mutate] = useMutation(UPLOAD_FILE);\r\n\r\n    function onChange({\r\n        target: {\r\n            validity,\r\n            files: [file],\r\n        },\r\n    }) {\r\n        if (validity.valid) mutate({ variables: { file } });\r\n    }\r\n\r\n    return <input type=\"file\" required onChange={onChange} />;\r\n}\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}