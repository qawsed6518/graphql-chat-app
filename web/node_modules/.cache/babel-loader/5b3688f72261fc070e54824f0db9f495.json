{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\routes\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Form, Message, Button, Input, Container, Header } from \"semantic-ui-react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_USER = gql`\n    mutation Register($username: String!, $password: String!) {\n        register(options: { username: $username, password: $password }) {\n            user {\n                username\n            }\n            errors {\n                message\n            }\n        }\n    }\n`;\n\nfunction Register() {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [createUser, {\n    data\n  }] = useMutation(CREATE_USER, {\n    onCompleted() {\n      console.log(data);\n    }\n\n  });\n\n  const onSubmit = async data => await createUser({\n    variables: data\n  });\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    text: true,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        error: !!usernameError,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"username\",\n          type: \"username\",\n          placeholder: \"Username\",\n          fluid: true,\n          ...register(\"username\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        error: !!passwordError,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password\",\n          ...register(\"password\"),\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), errorList.length ? /*#__PURE__*/_jsxDEV(Message, {\n      error: true,\n      header: \"There was some errors with your submission\",\n      list: errorList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"AxuxQRlchj5Xab2ngLw3BRt5o6s=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/code3/web/src/routes/Register.js"],"names":["React","useForm","Form","Message","Button","Input","Container","Header","gql","useMutation","CREATE_USER","Register","register","handleSubmit","createUser","data","onCompleted","console","log","onSubmit","variables","usernameError","passwordError","errorList","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SACIC,IADJ,EAEIC,OAFJ,EAGIC,MAHJ,EAIIC,KAJJ,EAKIC,SALJ,EAMIC,MANJ,QAOO,mBAPP;AAQA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;;AAEA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,SAASG,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BZ,OAAO,EAA1C;AACA,QAAM,CAACa,UAAD,EAAa;AAAEC,IAAAA;AAAF,GAAb,IAAyBN,WAAW,CAACC,WAAD,EAAc;AACpDM,IAAAA,WAAW,GAAG;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH;;AAHmD,GAAd,CAA1C;;AAMA,QAAMI,QAAQ,GAAG,MAAOJ,IAAP,IAAgB,MAAMD,UAAU,CAAC;AAAEM,IAAAA,SAAS,EAAEL;AAAb,GAAD,CAAjD;;AAEA,sBACI,QAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEF,YAAY,CAACM,QAAD,CAA5B;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE,CAAC,CAACE,aAArB;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAC,UAHhB;AAII,UAAA,KAAK,MAJT;AAAA,aAKQT,QAAQ,CAAC,UAAD;AALhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE,CAAC,CAACU,aAArB;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAC,UAHhB;AAAA,aAIQV,QAAQ,CAAC,UAAD,CAJhB;AAKI,UAAA,KAAK;AALT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAoBI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAwBKW,SAAS,CAACC,MAAV,gBACG,QAAC,OAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,MAAM,EAAC,4CAFX;AAGI,MAAA,IAAI,EAAED;AAHV;AAAA;AAAA;AAAA;AAAA,YADH,GAMG,IA9BR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GA5CQZ,Q;UAC8BV,O,EACJQ,W;;;KAF1BE,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport {\r\n    Form,\r\n    Message,\r\n    Button,\r\n    Input,\r\n    Container,\r\n    Header,\r\n} from \"semantic-ui-react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_USER = gql`\r\n    mutation Register($username: String!, $password: String!) {\r\n        register(options: { username: $username, password: $password }) {\r\n            user {\r\n                username\r\n            }\r\n            errors {\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction Register() {\r\n    const { register, handleSubmit } = useForm();\r\n    const [createUser, { data }] = useMutation(CREATE_USER, {\r\n        onCompleted() {\r\n            console.log(data);\r\n        },\r\n    });\r\n\r\n    const onSubmit = async (data) => await createUser({ variables: data });\r\n\r\n    return (\r\n        <Container text>\r\n            <Header as=\"h2\">Register</Header>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Form.Field error={!!usernameError}>\r\n                    <Input\r\n                        name=\"username\"\r\n                        type=\"username\"\r\n                        placeholder=\"Username\"\r\n                        fluid\r\n                        {...register(\"username\")}\r\n                    />\r\n                </Form.Field>\r\n\r\n                <Form.Field error={!!passwordError}>\r\n                    <Input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        {...register(\"password\")}\r\n                        fluid\r\n                    />\r\n                </Form.Field>\r\n                <Button type=\"submit\">Submit</Button>\r\n            </Form>\r\n            {errorList.length ? (\r\n                <Message\r\n                    error\r\n                    header=\"There was some errors with your submission\"\r\n                    list={errorList}\r\n                />\r\n            ) : null}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}