{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\routes\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Message, Button, Input, Container, Header } from \"semantic-ui-react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_USER = gql`\n    mutation createUser(\n        $username: String!\n        $email: String!\n        $password: String!\n    ) {\n        createUser(\n            options: { username: $username, email: $email, password: $password }\n        ) {\n            user {\n                id\n                username\n                email\n            }\n            errors {\n                message\n            }\n        }\n    }\n`;\n\nfunction Register() {\n  _s();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    setSubmitting(true);\n    event.preventDefault();\n    await new Promise(r => setTimeout(r, 1000));\n    setErrors(validate(values));\n  };\n\n  useEffect(() => {\n    if (submitting) {\n      if (Object.keys(errors).length === 0) {\n        alert(JSON.stringify(values, null, 2));\n      }\n\n      setSubmitting(false);\n    }\n  }, [errors]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: values.email,\n        onChange: handleChange,\n        className: errors.email && \"errorInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"errorMessage\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: values.password,\n        onChange: handleChange,\n        className: errors.email && \"errorInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"errorMessage\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: submitting,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"MkaU3IlEmb/3/nBvseGCi7cl6Po=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/code3/web/src/routes/Register.js"],"names":["React","useEffect","useState","Form","Message","Button","Input","Container","Header","gql","useMutation","CREATE_USER","Register","values","setValues","username","password","errors","setErrors","submitting","setSubmitting","handleChange","event","name","value","target","handleSubmit","preventDefault","Promise","r","setTimeout","validate","Object","keys","length","alert","JSON","stringify","email"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Form,\r\n    Message,\r\n    Button,\r\n    Input,\r\n    Container,\r\n    Header,\r\n} from \"semantic-ui-react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_USER = gql`\r\n    mutation createUser(\r\n        $username: String!\r\n        $email: String!\r\n        $password: String!\r\n    ) {\r\n        createUser(\r\n            options: { username: $username, email: $email, password: $password }\r\n        ) {\r\n            user {\r\n                id\r\n                username\r\n                email\r\n            }\r\n            errors {\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction Register() {\r\n    const [values, setValues] = useState({ username: \"\", password: \"\" });\r\n    const [errors, setErrors] = useState({});\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        setSubmitting(true);\r\n        event.preventDefault();\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n        setErrors(validate(values));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (submitting) {\r\n            if (Object.keys(errors).length === 0) {\r\n                alert(JSON.stringify(values, null, 2));\r\n            }\r\n            setSubmitting(false);\r\n        }\r\n    }, [errors]);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} noValidate>\r\n            <label>\r\n                Email:\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    className={errors.email && \"errorInput\"}\r\n                />\r\n                {errors.email && (\r\n                    <span className=\"errorMessage\">{errors.email}</span>\r\n                )}\r\n            </label>\r\n            <br />\r\n            <label>\r\n                Password:\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    className={errors.email && \"errorInput\"}\r\n                />\r\n                {errors.password && (\r\n                    <span className=\"errorMessage\">{errors.password}</span>\r\n                )}\r\n            </label>\r\n            <br />\r\n            <button type=\"submit\" disabled={submitting}>\r\n                로그인\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}