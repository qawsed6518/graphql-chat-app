{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/code3/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _objectSpread from\"C:/code3/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/code3/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _templateObject,_templateObject2,_templateObject3;var _excluded=[\"subscribeToMore\"];import React from\"react\";import styled from\"styled-components\";import Message from\"./Message\";import{gql,useQuery}from\"@apollo/client\";import{jsx as _jsx}from\"react/jsx-runtime\";function Messages(_ref){var channelName=_ref.channelName;var _useQuery=useQuery(MESSAGES,{variables:{channelName:channelName}}),subscribeToMore=_useQuery.subscribeToMore,result=_objectWithoutProperties(_useQuery,_excluded);subscribeToMore({document:NEW_MESSAGE,variables:{channelName:channelName},updateQuery:function updateQuery(prev,_ref2){var subscriptionData=_ref2.subscriptionData;if(!subscriptionData.data)return prev;var newMS=subscriptionData.data.newMessage;return Object.assign({},prev,{messages:_objectSpread({newMS:newMS},prev.messages)});}});var MS=result.loading?/*#__PURE__*/_jsx(Container,{}):/*#__PURE__*/_jsx(Container,{children:result.data.messages.map(function(message){return/*#__PURE__*/_jsx(Message,{user:message.user,message:message.text,timestamp:message.date},message._id);})});return MS;}export default Messages;var NEW_MESSAGE=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    subscription new_Message($channelName: String!) {\\n        newMessage(channelName: $channelName) {\\n            _id\\n            user\\n            text\\n            date\\n        }\\n    }\\n\"])));var MESSAGES=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    query Messages($channelName: String!) {\\n        messages(channelName: $channelName) {\\n            _id\\n            user\\n            text\\n            date\\n        }\\n    }\\n\"])));var Container=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    flex: 1;\\n    overflow: auto;\\n\\n    ::-webkit-scrollbar {\\n        width: 10px;\\n    }\\n    ::-webkit-scrollbar-thumb {\\n        background-color: #2f3542;\\n    }\\n    ::-webkit-scrollbar-track {\\n        background-color: grey;\\n    }\\n\"])));","map":{"version":3,"sources":["C:/code3/web/src/components/Messages.js"],"names":["React","styled","Message","gql","useQuery","Messages","channelName","MESSAGES","variables","subscribeToMore","result","document","NEW_MESSAGE","updateQuery","prev","subscriptionData","data","newMS","newMessage","Object","assign","messages","MS","loading","map","message","user","text","date","_id","Container","div"],"mappings":"ogBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,GAAT,CAAcC,QAAd,KAA8B,gBAA9B,C,2CAEA,QAASC,CAAAA,QAAT,MAAmC,IAAfC,CAAAA,WAAe,MAAfA,WAAe,CAC/B,cAAuCF,QAAQ,CAACG,QAAD,CAAW,CACtDC,SAAS,CAAE,CAAEF,WAAW,CAAXA,WAAF,CAD2C,CAAX,CAA/C,CAAQG,eAAR,WAAQA,eAAR,CAA4BC,MAA5B,+CAIAD,eAAe,CAAC,CACZE,QAAQ,CAAEC,WADE,CAEZJ,SAAS,CAAE,CAAEF,WAAW,CAAXA,WAAF,CAFC,CAGZO,WAAW,CAAE,qBAACC,IAAD,OAAgC,IAAvBC,CAAAA,gBAAuB,OAAvBA,gBAAuB,CACzC,GAAI,CAACA,gBAAgB,CAACC,IAAtB,CAA4B,MAAOF,CAAAA,IAAP,CAC5B,GAAMG,CAAAA,KAAK,CAAGF,gBAAgB,CAACC,IAAjB,CAAsBE,UAApC,CACA,MAAOC,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBN,IAAlB,CAAwB,CAC3BO,QAAQ,gBAAIJ,KAAK,CAALA,KAAJ,EAAcH,IAAI,CAACO,QAAnB,CADmB,CAAxB,CAAP,CAGH,CATW,CAAD,CAAf,CAYA,GAAMC,CAAAA,EAAE,CAAGZ,MAAM,CAACa,OAAP,cACP,KAAC,SAAD,IADO,cAGP,KAAC,SAAD,WACKb,MAAM,CAACM,IAAP,CAAYK,QAAZ,CAAqBG,GAArB,CAAyB,SAACC,OAAD,qBACtB,KAAC,OAAD,EAEI,IAAI,CAAEA,OAAO,CAACC,IAFlB,CAGI,OAAO,CAAED,OAAO,CAACE,IAHrB,CAII,SAAS,CAAEF,OAAO,CAACG,IAJvB,EACSH,OAAO,CAACI,GADjB,CADsB,EAAzB,CADL,EAHJ,CAeA,MAAOP,CAAAA,EAAP,CACH,CACD,cAAejB,CAAAA,QAAf,CAEA,GAAMO,CAAAA,WAAW,CAAGT,GAAH,oQAAjB,CAWA,GAAMI,CAAAA,QAAQ,CAAGJ,GAAH,0PAAd,CAWA,GAAM2B,CAAAA,SAAS,CAAG7B,MAAM,CAAC8B,GAAV,uTAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Message from \"./Message\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nfunction Messages({ channelName }) {\r\n    const { subscribeToMore, ...result } = useQuery(MESSAGES, {\r\n        variables: { channelName },\r\n    });\r\n\r\n    subscribeToMore({\r\n        document: NEW_MESSAGE,\r\n        variables: { channelName },\r\n        updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const newMS = subscriptionData.data.newMessage;\r\n            return Object.assign({}, prev, {\r\n                messages: { newMS, ...prev.messages },\r\n            });\r\n        },\r\n    });\r\n\r\n    const MS = result.loading ? (\r\n        <Container />\r\n    ) : (\r\n        <Container>\r\n            {result.data.messages.map((message) => (\r\n                <Message\r\n                    key={message._id}\r\n                    user={message.user}\r\n                    message={message.text}\r\n                    timestamp={message.date}\r\n                />\r\n            ))}\r\n        </Container>\r\n    );\r\n\r\n    return MS;\r\n}\r\nexport default Messages;\r\n\r\nconst NEW_MESSAGE = gql`\r\n    subscription new_Message($channelName: String!) {\r\n        newMessage(channelName: $channelName) {\r\n            _id\r\n            user\r\n            text\r\n            date\r\n        }\r\n    }\r\n`;\r\n\r\nconst MESSAGES = gql`\r\n    query Messages($channelName: String!) {\r\n        messages(channelName: $channelName) {\r\n            _id\r\n            user\r\n            text\r\n            date\r\n        }\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    flex: 1;\r\n    overflow: auto;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: #2f3542;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background-color: grey;\r\n    }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}