{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\routes\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Input, InputGroup, InputLeftAddon, Button, Box, Text, Alert, AlertIcon } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_USER = gql`\n    mutation createUser($username: String!, $password: String!) {\n        createUser(options: { username: $username, password: $password }) {\n            user {\n                id\n                username\n            }\n            errors {\n                message\n            }\n        }\n    }\n`;\nexport default function Register({\n  history\n}) {\n  _s();\n\n  const [err, setErr] = useState(\"\");\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [createUser] = useMutation(CREATE_USER, {\n    onCompleted({\n      createUser: {\n        user,\n        errors\n      }\n    }) {\n      user ? history.push(\"/\") : setErr(errors[0].message);\n    }\n\n  });\n\n  const onSubmit = async input => {\n    await createUser({\n      variables: input\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Register, \"nuLIbAXMwm3G0nBJCsBx8JcGXKU=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/code3/web/src/routes/Register.js"],"names":["React","useState","useForm","gql","useMutation","Input","InputGroup","InputLeftAddon","Button","Box","Text","Alert","AlertIcon","CREATE_USER","Register","history","err","setErr","register","handleSubmit","createUser","onCompleted","user","errors","push","message","onSubmit","input","variables"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,SACIC,KADJ,EAEIC,UAFJ,EAGIC,cAHJ,EAIIC,MAJJ,EAKIC,GALJ,EAMIC,IANJ,EAOIC,KAPJ,EAQIC,SARJ,QASO,kBATP;;AAWA,MAAMC,WAAW,GAAGV,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,eAAe,SAASW,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAC1C,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAM;AAAEiB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BjB,OAAO,EAA1C;AACA,QAAM,CAACkB,UAAD,IAAehB,WAAW,CAACS,WAAD,EAAc;AAC1CQ,IAAAA,WAAW,CAAC;AAAED,MAAAA,UAAU,EAAE;AAAEE,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAd,KAAD,EAAmC;AAC1CD,MAAAA,IAAI,GAAGP,OAAO,CAACS,IAAR,CAAa,GAAb,CAAH,GAAuBP,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,CAAUE,OAAX,CAAjC;AACH;;AAHyC,GAAd,CAAhC;;AAMA,QAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9B,UAAMP,UAAU,CAAC;AAAEQ,MAAAA,SAAS,EAAED;AAAb,KAAD,CAAhB;AACH,GAFD;;AAIA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAfuBb,Q;UAGeZ,O,EACdE,W;;;KAJDU,Q","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport {\r\n    Input,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Button,\r\n    Box,\r\n    Text,\r\n    Alert,\r\n    AlertIcon,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst CREATE_USER = gql`\r\n    mutation createUser($username: String!, $password: String!) {\r\n        createUser(options: { username: $username, password: $password }) {\r\n            user {\r\n                id\r\n                username\r\n            }\r\n            errors {\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function Register({ history }) {\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const [createUser] = useMutation(CREATE_USER, {\r\n        onCompleted({ createUser: { user, errors } }) {\r\n            user ? history.push(\"/\") : setErr(errors[0].message);\r\n        },\r\n    });\r\n\r\n    const onSubmit = async (input) => {\r\n        await createUser({ variables: input });\r\n    };\r\n\r\n    return <div>hello</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}