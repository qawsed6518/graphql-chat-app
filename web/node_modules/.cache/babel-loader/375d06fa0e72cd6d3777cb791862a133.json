{"ast":null,"code":"import _objectSpread from\"C:/code3/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/code3/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/code3/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/code3/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/code3/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from\"react\";import{useForm}from\"react-hook-form\";// import {\n//     Form,\n//     Message,\n//     Button,\n//     Input,\n//     Container,\n//     Header,\n// } from \"semantic-ui-react\";\nimport{gql,useMutation}from\"@apollo/client\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CREATE_USER=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    mutation Register($username: String!, $password: String!) {\\n        register(\\n            options: { username: $username, email: $email, password: $password }\\n        ) {\\n            user {\\n                username\\n            }\\n            errors {\\n                message\\n            }\\n        }\\n    }\\n\"])));function Register(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit;var _useMutation=useMutation(CREATE_USER,{onCompleted:function onCompleted(){console.log(\"register\");}}),_useMutation2=_slicedToArray(_useMutation,1),createUser=_useMutation2[0];var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return createUser({variables:data});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({},register(\"username\"))),/*#__PURE__*/_jsx(\"input\",_objectSpread({},register(\"password\"))),/*#__PURE__*/_jsx(\"input\",{type:\"submit\"})]});}export default Register;","map":{"version":3,"sources":["C:/code3/web/src/routes/Register.js"],"names":["React","useForm","gql","useMutation","CREATE_USER","Register","register","handleSubmit","onCompleted","console","log","createUser","onSubmit","data","variables"],"mappings":"+qBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAASC,GAAT,CAAcC,WAAd,KAAiC,gBAAjC,C,wFAEA,GAAMC,CAAAA,WAAW,CAAGF,GAAH,mYAAjB,CAeA,QAASG,CAAAA,QAAT,EAAoB,CAChB,aAAmCJ,OAAO,EAA1C,CAAQK,QAAR,UAAQA,QAAR,CAAkBC,YAAlB,UAAkBA,YAAlB,CACA,iBAAqBJ,WAAW,CAACC,WAAD,CAAc,CAC1CI,WAD0C,uBAC5B,CACVC,OAAO,CAACC,GAAR,CAAY,UAAZ,EACH,CAHyC,CAAd,CAAhC,8CAAOC,UAAP,kBAMA,GAAMC,CAAAA,QAAQ,0FAAG,iBAAOC,IAAP,wIAAsBF,CAAAA,UAAU,CAAC,CAAEG,SAAS,CAAED,IAAb,CAAD,CAAhC,6GAAH,kBAARD,CAAAA,QAAQ,4CAAd,CAEA,mBACI,cAAM,QAAQ,CAAEL,YAAY,CAACK,QAAD,CAA5B,wBACI,8BAAWN,QAAQ,CAAC,UAAD,CAAnB,EADJ,cAEI,8BAAWA,QAAQ,CAAC,UAAD,CAAnB,EAFJ,cAGI,cAAO,IAAI,CAAC,QAAZ,EAHJ,GADJ,CAOH,CAED,cAAeD,CAAAA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// import {\r\n//     Form,\r\n//     Message,\r\n//     Button,\r\n//     Input,\r\n//     Container,\r\n//     Header,\r\n// } from \"semantic-ui-react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_USER = gql`\r\n    mutation Register($username: String!, $password: String!) {\r\n        register(\r\n            options: { username: $username, email: $email, password: $password }\r\n        ) {\r\n            user {\r\n                username\r\n            }\r\n            errors {\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction Register() {\r\n    const { register, handleSubmit } = useForm();\r\n    const [createUser] = useMutation(CREATE_USER, {\r\n        onCompleted() {\r\n            console.log(\"register\");\r\n        },\r\n    });\r\n\r\n    const onSubmit = async (data) => await createUser({ variables: data });\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input {...register(\"username\")} />\r\n            <input {...register(\"password\")} />\r\n            <input type=\"submit\" />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}