{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Message from \"./Message\";\nimport Subscription from \"./Subscription\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Messages({\n  channelName\n}) {\n  _s();\n\n  const {\n    subscribeToMore,\n    ...result\n  } = useQuery(MESSAGES, {\n    variables: {\n      channelName\n    }\n  }); // const MS = result.loading ? (\n  //     <Container></Container>\n  // ) : (\n  //     <Container>\n  //         {result.data.messages.map((message) => (\n  //             <Message\n  //                 timestamp={message.date}\n  //                 message={message.text}\n  //                 user={message.user}\n  //             />\n  //         ))}\n  //     </Container>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(Subscription, {\n    subscribeToNewMessages: () => subscribeToMore({\n      document: NEW_MESSAGE,\n      variables: {\n        channelName\n      },\n      updateQuery: (prev, {\n        subscriptionData\n      }) => {\n        if (!subscriptionData.data) return prev;\n        const newMs = subscriptionData.data.newMessage;\n        return Object.assign({}, prev, {\n          msg: [newMs, ...prev.messages]\n        });\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Messages, \"0PSlxKdhZuty3h1dxa7tuP6aVwo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Messages;\nexport default Messages;\nconst NEW_MESSAGE = gql`\n    subscription new_Message($channelName: String!) {\n        newMessage(channelName: $channelName) {\n            user\n            text\n            date\n        }\n    }\n`;\nconst MESSAGES = gql`\n    query Messages($channelName: String!) {\n        messages(channelName: $channelName) {\n            user\n            text\n            date\n        }\n    }\n`;\nconst Container = styled.div`\n    flex: 1;\n    overflow: auto;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n    ::-webkit-scrollbar-thumb {\n        background-color: #2f3542;\n    }\n    ::-webkit-scrollbar-track {\n        background-color: grey;\n    }\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/code3/web/src/components/Messages.js"],"names":["React","styled","Message","Subscription","gql","useQuery","Messages","channelName","subscribeToMore","result","MESSAGES","variables","document","NEW_MESSAGE","updateQuery","prev","subscriptionData","data","newMs","newMessage","Object","assign","msg","messages","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAmC;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,eAAF;AAAmB,OAAGC;AAAtB,MAAiCJ,QAAQ,CAACK,QAAD,EAAW;AACtDC,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AAD2C,GAAX,CAA/C,CAD+B,CAK/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,QAAC,YAAD;AACI,IAAA,sBAAsB,EAAE,MACpBC,eAAe,CAAC;AACZI,MAAAA,QAAQ,EAAEC,WADE;AAEZF,MAAAA,SAAS,EAAE;AAAEJ,QAAAA;AAAF,OAFC;AAGZO,MAAAA,WAAW,EAAE,CAACC,IAAD,EAAO;AAAEC,QAAAA;AAAF,OAAP,KAAgC;AACzC,YAAI,CAACA,gBAAgB,CAACC,IAAtB,EAA4B,OAAOF,IAAP;AAC5B,cAAMG,KAAK,GAAGF,gBAAgB,CAACC,IAAjB,CAAsBE,UAApC;AACA,eAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,IAAlB,EAAwB;AAC3BO,UAAAA,GAAG,EAAE,CAACJ,KAAD,EAAQ,GAAGH,IAAI,CAACQ,QAAhB;AADsB,SAAxB,CAAP;AAGH;AATW,KAAD;AAFvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GApCQjB,Q;UACkCD,Q;;;KADlCC,Q;AAqCT,eAAeA,QAAf;AAEA,MAAMO,WAAW,GAAGT,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMM,QAAQ,GAAGN,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMoB,SAAS,GAAGvB,MAAM,CAACwB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Message from \"./Message\";\r\nimport Subscription from \"./Subscription\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nfunction Messages({ channelName }) {\r\n    const { subscribeToMore, ...result } = useQuery(MESSAGES, {\r\n        variables: { channelName },\r\n    });\r\n\r\n    // const MS = result.loading ? (\r\n    //     <Container></Container>\r\n    // ) : (\r\n    //     <Container>\r\n    //         {result.data.messages.map((message) => (\r\n    //             <Message\r\n    //                 timestamp={message.date}\r\n    //                 message={message.text}\r\n    //                 user={message.user}\r\n    //             />\r\n    //         ))}\r\n    //     </Container>\r\n    // );\r\n\r\n    return (\r\n        <Subscription\r\n            subscribeToNewMessages={() =>\r\n                subscribeToMore({\r\n                    document: NEW_MESSAGE,\r\n                    variables: { channelName },\r\n                    updateQuery: (prev, { subscriptionData }) => {\r\n                        if (!subscriptionData.data) return prev;\r\n                        const newMs = subscriptionData.data.newMessage;\r\n                        return Object.assign({}, prev, {\r\n                            msg: [newMs, ...prev.messages],\r\n                        });\r\n                    },\r\n                })\r\n            }\r\n        />\r\n    );\r\n}\r\nexport default Messages;\r\n\r\nconst NEW_MESSAGE = gql`\r\n    subscription new_Message($channelName: String!) {\r\n        newMessage(channelName: $channelName) {\r\n            user\r\n            text\r\n            date\r\n        }\r\n    }\r\n`;\r\n\r\nconst MESSAGES = gql`\r\n    query Messages($channelName: String!) {\r\n        messages(channelName: $channelName) {\r\n            user\r\n            text\r\n            date\r\n        }\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    flex: 1;\r\n    overflow: auto;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: #2f3542;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background-color: grey;\r\n    }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}