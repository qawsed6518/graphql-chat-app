{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { split, HttpLink } from \"@apollo/client\";\nimport \"./index.css\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { getMainDefinition } from \"@apollo/client/utilities\"; // const httpLink = new HttpLink({\n//     uri: \"http://localhost:4000/graphql\",\n// });\n// const wsLink = new WebSocketLink({\n//     uri: \"ws://localhost:4000/subscriptions\",\n//     options: {\n//         reconnect: true,\n//     },\n// });\n// const splitLink = split(\n//     ({ query }) => {\n//         const definition = getMainDefinition(query);\n//         return (\n//             definition.kind === \"OperationDefinition\" &&\n//             definition.operation === \"subscription\"\n//         );\n//     },\n//     wsLink,\n//     httpLink\n// );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  cache: new InMemoryCache(),\n  credentials: \"include\"\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/code3/web/src/index.js"],"names":["React","ReactDOM","App","ApolloClient","InMemoryCache","ApolloProvider","split","HttpLink","WebSocketLink","getMainDefinition","client","uri","cache","credentials","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA4D,gBAA5D;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,gBAAhC;AACA,OAAO,aAAP;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,iBAAT,QAAkC,0BAAlC,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC5BQ,EAAAA,GAAG,EAAE,+BADuB;AAE5BC,EAAAA,KAAK,EAAE,IAAIR,aAAJ,EAFqB;AAG5BS,EAAAA,WAAW,EAAE;AAHe,CAAjB,CAAf;AAMAZ,QAAQ,CAACa,MAAT,eACI,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA,yBACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAIIK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { split, HttpLink } from \"@apollo/client\";\nimport \"./index.css\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\n// const httpLink = new HttpLink({\n//     uri: \"http://localhost:4000/graphql\",\n// });\n\n// const wsLink = new WebSocketLink({\n//     uri: \"ws://localhost:4000/subscriptions\",\n//     options: {\n//         reconnect: true,\n//     },\n// });\n\n// const splitLink = split(\n//     ({ query }) => {\n//         const definition = getMainDefinition(query);\n//         return (\n//             definition.kind === \"OperationDefinition\" &&\n//             definition.operation === \"subscription\"\n//         );\n//     },\n//     wsLink,\n//     httpLink\n// );\n\nconst client = new ApolloClient({\n    uri: \"http://localhost:4000/graphql\",\n    cache: new InMemoryCache(),\n    credentials: \"include\",\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}