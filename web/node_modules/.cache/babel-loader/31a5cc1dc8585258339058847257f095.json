{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom\";import App from\"./App\";import\"./index.css\";import{ApolloClient,InMemoryCache,ApolloProvider,split// HttpLink,\n}from\"@apollo/client\";import{getMainDefinition}from\"@apollo/client/utilities\";import{WebSocketLink}from\"@apollo/client/link/ws\";import{createUploadLink}from\"apollo-upload-client\";import{jsx as _jsx}from\"react/jsx-runtime\";var httpLink=new createUploadLink({uri:\"http://localhost:4000/graphql\",credentials:\"include\"});var wsLink=new WebSocketLink({uri:\"ws://localhost:4000/graphql\",options:{reconnect:true}});var splitLink=split(function(_ref){var query=_ref.query;var definition=getMainDefinition(query);return definition.kind===\"OperationDefinition\"&&definition.operation===\"subscription\";},wsLink,httpLink);var client=new ApolloClient({link:splitLink,cache:new InMemoryCache()});ReactDOM.render(/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(App,{})}),document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/code3/web/src/index.js"],"names":["React","ReactDOM","App","ApolloClient","InMemoryCache","ApolloProvider","split","getMainDefinition","WebSocketLink","createUploadLink","httpLink","uri","credentials","wsLink","options","reconnect","splitLink","query","definition","kind","operation","client","link","cache","render","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,aAAP,CACA,OACIC,YADJ,CAEIC,aAFJ,CAGIC,cAHJ,CAIIC,KACA;AALJ,KAMO,gBANP,CAOA,OAASC,iBAAT,KAAkC,0BAAlC,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,OAASC,gBAAT,KAAiC,sBAAjC,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,GAAID,CAAAA,gBAAJ,CAAqB,CAClCE,GAAG,gCAD+B,CAElCC,WAAW,CAAE,SAFqB,CAArB,CAAjB,CAKA,GAAMC,CAAAA,MAAM,CAAG,GAAIL,CAAAA,aAAJ,CAAkB,CAC7BG,GAAG,8BAD0B,CAE7BG,OAAO,CAAE,CACLC,SAAS,CAAE,IADN,CAFoB,CAAlB,CAAf,CAOA,GAAMC,CAAAA,SAAS,CAAGV,KAAK,CACnB,cAAe,IAAZW,CAAAA,KAAY,MAAZA,KAAY,CACX,GAAMC,CAAAA,UAAU,CAAGX,iBAAiB,CAACU,KAAD,CAApC,CACA,MACIC,CAAAA,UAAU,CAACC,IAAX,GAAoB,qBAApB,EACAD,UAAU,CAACE,SAAX,GAAyB,cAF7B,CAIH,CAPkB,CAQnBP,MARmB,CASnBH,QATmB,CAAvB,CAYA,GAAMW,CAAAA,MAAM,CAAG,GAAIlB,CAAAA,YAAJ,CAAiB,CAC5BmB,IAAI,CAAEN,SADsB,CAE5BO,KAAK,CAAE,GAAInB,CAAAA,aAAJ,EAFqB,CAAjB,CAAf,CAKAH,QAAQ,CAACuB,MAAT,cACI,KAAC,cAAD,EAAgB,MAAM,CAAEH,MAAxB,uBACI,KAAC,GAAD,IADJ,EADJ,CAIII,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    split,\n    // HttpLink,\n} from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { createUploadLink } from \"apollo-upload-client\";\n\nconst httpLink = new createUploadLink({\n    uri: `http://localhost:4000/graphql`,\n    credentials: \"include\",\n});\n\nconst wsLink = new WebSocketLink({\n    uri: `ws://localhost:4000/graphql`,\n    options: {\n        reconnect: true,\n    },\n});\n\nconst splitLink = split(\n    ({ query }) => {\n        const definition = getMainDefinition(query);\n        return (\n            definition.kind === \"OperationDefinition\" &&\n            definition.operation === \"subscription\"\n        );\n    },\n    wsLink,\n    httpLink\n);\n\nconst client = new ApolloClient({\n    link: splitLink,\n    cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}