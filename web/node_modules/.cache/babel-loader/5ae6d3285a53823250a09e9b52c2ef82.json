{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\components\\\\Drop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { AddCircle } from \"@styled-icons/fluentui-system-regular/AddCircle\";\nimport Dropzone from \"react-dropzone\"; // function Drop({ channelName }) {\n//     const [uploadFile] = useMutation(CREATE_FILE);\n//     const onDrop = useCallback(\n//         ([file]) => {\n//             uploadFile({\n//                 variables: {\n//                     channelName: channelName,\n//                     file: file,\n//                 },\n//             });\n//         },\n//         [uploadFile]\n//     );\n//     const { getRootProps, getInputProps } = useDropzone({ onDrop });\n//     return (\n//         <div {...getRootProps()}>\n//             <input {...getInputProps()} />\n//             <AddIcon size=\"48\" />\n//         </div>\n//     );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Drop({\n  channelName\n}) {\n  _s();\n\n  const [uploadFile] = useMutation(CREATE_FILE);\n  return /*#__PURE__*/_jsxDEV(Dropzone, {\n    onDrop: async ([file]) => {\n      uploadFile({\n        variables: {\n          channelName: {\n            channelName\n          },\n          file: file\n        }\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Drop, \"qigFVzTWkgn+w3NJPxJSvgWZGc0=\", false, function () {\n  return [useMutation];\n});\n\n_c = Drop;\nexport default Drop;\nconst AddIcon = styled(AddCircle)``;\nconst CREATE_FILE = gql`\n    mutation CreateFileMessage($channelName: String!, $file: Upload!) {\n        createFileMessage(input: { channelName: $channelName, file: $file })\n    }\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drop\");","map":{"version":3,"sources":["C:/code3/web/src/components/Drop.js"],"names":["React","useCallback","gql","useMutation","styled","AddCircle","Dropzone","Drop","channelName","uploadFile","CREATE_FILE","file","variables","AddIcon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,iDAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA+B;AAAA;;AAC3B,QAAM,CAACC,UAAD,IAAeN,WAAW,CAACO,WAAD,CAAhC;AACA,sBACI,QAAC,QAAD;AACI,IAAA,MAAM,EAAE,OAAO,CAACC,IAAD,CAAP,KAAkB;AACtBF,MAAAA,UAAU,CAAC;AACPG,QAAAA,SAAS,EAAE;AACPJ,UAAAA,WAAW,EAAE;AAAEA,YAAAA;AAAF,WADN;AAEPG,UAAAA,IAAI,EAAEA;AAFC;AADJ,OAAD,CAAV;AAMH;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAdQJ,I;UACgBJ,W;;;KADhBI,I;AAgBT,eAAeA,IAAf;AAEA,MAAMM,OAAO,GAAGT,MAAM,CAACC,SAAD,CAAY,EAAlC;AAEA,MAAMK,WAAW,GAAGR,GAAI;AACxB;AACA;AACA;AACA,CAJA","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport styled from \"styled-components\";\r\nimport { AddCircle } from \"@styled-icons/fluentui-system-regular/AddCircle\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\n// function Drop({ channelName }) {\r\n//     const [uploadFile] = useMutation(CREATE_FILE);\r\n//     const onDrop = useCallback(\r\n//         ([file]) => {\r\n//             uploadFile({\r\n//                 variables: {\r\n//                     channelName: channelName,\r\n//                     file: file,\r\n//                 },\r\n//             });\r\n//         },\r\n//         [uploadFile]\r\n//     );\r\n\r\n//     const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n//     return (\r\n//         <div {...getRootProps()}>\r\n//             <input {...getInputProps()} />\r\n//             <AddIcon size=\"48\" />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nfunction Drop({ channelName }) {\r\n    const [uploadFile] = useMutation(CREATE_FILE);\r\n    return (\r\n        <Dropzone\r\n            onDrop={async ([file]) => {\r\n                uploadFile({\r\n                    variables: {\r\n                        channelName: { channelName },\r\n                        file: file,\r\n                    },\r\n                });\r\n            }}\r\n        ></Dropzone>\r\n    );\r\n}\r\n\r\nexport default Drop;\r\n\r\nconst AddIcon = styled(AddCircle)``;\r\n\r\nconst CREATE_FILE = gql`\r\n    mutation CreateFileMessage($channelName: String!, $file: Upload!) {\r\n        createFileMessage(input: { channelName: $channelName, file: $file })\r\n    }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}