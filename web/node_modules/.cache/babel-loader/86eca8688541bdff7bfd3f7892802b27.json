{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\routes\\\\CreateChannel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Form, Button, Input, Container, Header, Message } from \"semantic-ui-react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_CHANNEL = gql`\n    mutation createChannel($name: String!) {\n        createChannel(input: $name) {\n            channel {\n                name\n            }\n            errors {\n                field\n                message\n            }\n        }\n    }\n`;\n\nfunction CreateChannel({\n  history\n}) {\n  _s();\n\n  const [err, setErr] = useState(\"\");\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [createChannel] = useMutation(CREATE_CHANNEL, {\n    onCompleted({\n      createChannel: {\n        channel,\n        errors\n      }\n    }) {\n      channel ? history.push(\"/\") : setErr(errors[0].field);\n    }\n\n  });\n\n  const onSubmit = async data => await createChannel({\n    variables: data\n  });\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    text: true,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: \"Create Channel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        error: !!err,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"name\",\n          type: \"name\",\n          placeholder: \"channel name\",\n          fluid: true,\n          ...register(\"username\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), err ? /*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        header: \"Create Channel Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateChannel, \"MHwIHT75t9bxVlGRUz75lIsXhUY=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = CreateChannel;\nexport default CreateChannel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChannel\");","map":{"version":3,"sources":["C:/code3/web/src/routes/CreateChannel.js"],"names":["React","useState","useForm","Form","Button","Input","Container","Header","Message","gql","useMutation","CREATE_CHANNEL","CreateChannel","history","err","setErr","register","handleSubmit","createChannel","onCompleted","channel","errors","push","field","onSubmit","data","variables"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,MALJ,EAMIC,OANJ,QAOO,mBAPP;AAQA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;;AAEA,MAAMC,cAAc,GAAGF,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,SAASG,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AAAA;;AAChC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM;AAAEe,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6Bf,OAAO,EAA1C;AACA,QAAM,CAACgB,aAAD,IAAkBR,WAAW,CAACC,cAAD,EAAiB;AAChDQ,IAAAA,WAAW,CAAC;AAAED,MAAAA,aAAa,EAAE;AAAEE,QAAAA,OAAF;AAAWC,QAAAA;AAAX;AAAjB,KAAD,EAAyC;AAChDD,MAAAA,OAAO,GAAGP,OAAO,CAACS,IAAR,CAAa,GAAb,CAAH,GAAuBP,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,CAAUE,KAAX,CAApC;AACH;;AAH+C,GAAjB,CAAnC;;AAMA,QAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB,MAAMP,aAAa,CAAC;AAAEQ,IAAAA,SAAS,EAAED;AAAb,GAAD,CAApD;;AAEA,sBACI,QAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAER,YAAY,CAACO,QAAD,CAA5B;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE,CAAC,CAACV,GAArB;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,WAAW,EAAC,cAHhB;AAII,UAAA,KAAK,MAJT;AAAA,aAKQE,QAAQ,CAAC,UAAD;AALhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAWKF,GAAG,gBACA,QAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,MAAM,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cADA,GAEA,IAbR,eAcI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAhCQF,a;UAE8BV,O,EACXQ,W;;;KAHnBE,a;AAkCT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport {\r\n    Form,\r\n    Button,\r\n    Input,\r\n    Container,\r\n    Header,\r\n    Message,\r\n} from \"semantic-ui-react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_CHANNEL = gql`\r\n    mutation createChannel($name: String!) {\r\n        createChannel(input: $name) {\r\n            channel {\r\n                name\r\n            }\r\n            errors {\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction CreateChannel({ history }) {\r\n    const [err, setErr] = useState(\"\");\r\n    const { register, handleSubmit } = useForm();\r\n    const [createChannel] = useMutation(CREATE_CHANNEL, {\r\n        onCompleted({ createChannel: { channel, errors } }) {\r\n            channel ? history.push(\"/\") : setErr(errors[0].field);\r\n        },\r\n    });\r\n\r\n    const onSubmit = async (data) => await createChannel({ variables: data });\r\n\r\n    return (\r\n        <Container text>\r\n            <Header as=\"h2\">Create Channel</Header>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Form.Field error={!!err}>\r\n                    <Input\r\n                        name=\"name\"\r\n                        type=\"name\"\r\n                        placeholder=\"channel name\"\r\n                        fluid\r\n                        {...register(\"username\")}\r\n                    />\r\n                </Form.Field>\r\n\r\n                {err ? (\r\n                    <Message error header=\"Create Channel Error\"></Message>\r\n                ) : null}\r\n                <Button type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CreateChannel;\r\n"]},"metadata":{},"sourceType":"module"}