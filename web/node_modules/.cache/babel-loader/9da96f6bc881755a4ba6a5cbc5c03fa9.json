{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Message from \"./Message\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Messages({\n  channelName\n}) {\n  _s();\n\n  const {\n    subscribeToMore,\n    ...result\n  } = useQuery(MESSAGES, {\n    variables: {\n      channelName\n    }\n  });\n  console.log(\"result : \", result); // subscribeToMore({\n  //         document: NEW_MESSAGES,\n  //         VARIABLES: { variables: { channelName }},\n  //         updateQuery: (prev, {subscriptionData }) => {\n  //             if(!subscriptionData.data) return prev;\n  //             const newFeedItem = subscriptionData.data.newMessage;\n  //             return Object.assign({}, prev, {\n  //                 messages: [newFeedItem, ...prev.messages]\n  //             })\n  //         }\n  //     })\n  // }\n  // console.log(\"subscribe : \", subscribeToNewMessages);\n\n  const MS = loading ? /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n  return MS;\n}\n\n_s(Messages, \"0PSlxKdhZuty3h1dxa7tuP6aVwo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Messages;\nexport default Messages;\nconst MESSAGES = gql`\n    query Messages($channelName: String!) {\n        messages(channelName: $channelName) {\n            user\n            text\n            date\n        }\n    }\n`;\nconst NEW_MESSAGES = gql`\n    subscription NewMessage($channelName: String!) {\n        newMessage(channelName: $channelName) {\n            user\n            text\n            date\n        }\n    }\n`;\nconst Container = styled.div`\n    flex: 1;\n    overflow: auto;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n    ::-webkit-scrollbar-thumb {\n        background-color: #2f3542;\n    }\n    ::-webkit-scrollbar-track {\n        background-color: grey;\n    }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Messages\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/code3/web/src/components/Messages.js"],"names":["React","styled","Message","gql","useQuery","Messages","channelName","subscribeToMore","result","MESSAGES","variables","console","log","MS","loading","NEW_MESSAGES","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAmC;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,eAAF;AAAmB,OAAGC;AAAtB,MAAiCJ,QAAQ,CAACK,QAAD,EAAW;AACtDC,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AAD2C,GAAX,CAA/C;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,MAAzB,EAL+B,CAO/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAMK,EAAE,GAAGC,OAAO,gBACd,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UADc,gBAGd,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UAHJ;AAcA,SAAOD,EAAP;AACH;;GArCQR,Q;UACkCD,Q;;;KADlCC,Q;AAsCT,eAAeA,QAAf;AAEA,MAAMI,QAAQ,GAAGN,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMY,YAAY,GAAGZ,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMa,SAAS,GAAGf,MAAM,CAACgB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,S","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Message from \"./Message\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nfunction Messages({ channelName }) {\r\n    const { subscribeToMore, ...result } = useQuery(MESSAGES, {\r\n        variables: { channelName },\r\n    });\r\n\r\n    console.log(\"result : \", result);\r\n\r\n    // subscribeToMore({\r\n    //         document: NEW_MESSAGES,\r\n    //         VARIABLES: { variables: { channelName }},\r\n    //         updateQuery: (prev, {subscriptionData }) => {\r\n    //             if(!subscriptionData.data) return prev;\r\n    //             const newFeedItem = subscriptionData.data.newMessage;\r\n    //             return Object.assign({}, prev, {\r\n    //                 messages: [newFeedItem, ...prev.messages]\r\n    //             })\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // console.log(\"subscribe : \", subscribeToNewMessages);\r\n\r\n    const MS = loading ? (\r\n        <Container></Container>\r\n    ) : (\r\n        <Container>\r\n            {/* {data.messages.map((message) => (\r\n                <Message\r\n                    timestamp={message.date}\r\n                    message={message.text}\r\n                    user={message.user}\r\n                />\r\n            ))} */}\r\n        </Container>\r\n    );\r\n\r\n    return MS;\r\n}\r\nexport default Messages;\r\n\r\nconst MESSAGES = gql`\r\n    query Messages($channelName: String!) {\r\n        messages(channelName: $channelName) {\r\n            user\r\n            text\r\n            date\r\n        }\r\n    }\r\n`;\r\n\r\nconst NEW_MESSAGES = gql`\r\n    subscription NewMessage($channelName: String!) {\r\n        newMessage(channelName: $channelName) {\r\n            user\r\n            text\r\n            date\r\n        }\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    flex: 1;\r\n    overflow: auto;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: #2f3542;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background-color: grey;\r\n    }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}