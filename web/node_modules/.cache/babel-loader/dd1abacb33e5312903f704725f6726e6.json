{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\components\\\\Drop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { AddCircle } from \"@styled-icons/fluentui-system-regular/AddCircle\"; // function Drop({ channelName }) {\n//     const [uploadFile] = useMutation(CREATE_FILE);\n//     const onDrop = async ([file]) => {\n//         await uploadFile({\n//             variables: {\n//                 channelName: channelName,\n//                 file: file,\n//             },\n//         });\n//     };\n//     const { getRootProps, getInputProps } = useDropzone({ onDrop });\n//     return (\n//         <div {...getRootProps()}>\n//             <input {...getInputProps()} />\n//             <AddIcon size=\"48\" />\n//         </div>\n//     );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Drop({\n  channelName\n}) {\n  _s();\n\n  const [uploadFile] = useMutation(CREATE_FILE);\n  const onDrop = useCallback(([file]) => {\n    uploadFile({\n      variables: {\n        file\n      }\n    });\n  }, [uploadFile]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", { ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Drop, \"Ym+0XAtA5JNW28HTeTkxO4kBnO4=\", false, function () {\n  return [useMutation, useDropzone];\n});\n\n_c = Drop;\nexport default Drop;\nconst AddIcon = styled(AddCircle)``;\n_c2 = AddIcon;\nconst CREATE_FILE_MESSAGE = gql`\n    mutation CreateFileMessage($channelName: String!, $file: Upload!) {\n        createFileMessage(input: { channelName: $channelName, file: $file })\n    }\n`;\nconst CREATE_FILE = gql`\n    mutation CreateFile($file: Upload!) {\n        createFile(picture: $file)\n    }\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Drop\");\n$RefreshReg$(_c2, \"AddIcon\");","map":{"version":3,"sources":["C:/code3/web/src/components/Drop.js"],"names":["React","useCallback","useDropzone","gql","useMutation","styled","AddCircle","Drop","channelName","uploadFile","CREATE_FILE","onDrop","file","variables","getRootProps","getInputProps","isDragActive","AddIcon","CREATE_FILE_MESSAGE"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,iDAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA+B;AAAA;;AAC3B,QAAM,CAACC,UAAD,IAAeL,WAAW,CAACM,WAAD,CAAhC;AAEA,QAAMC,MAAM,GAAGV,WAAW,CACtB,CAAC,CAACW,IAAD,CAAD,KAAY;AACRH,IAAAA,UAAU,CAAC;AAAEI,MAAAA,SAAS,EAAE;AAAED,QAAAA;AAAF;AAAb,KAAD,CAAV;AACH,GAHqB,EAItB,CAACH,UAAD,CAJsB,CAA1B;AAOA,QAAM;AAAEK,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDd,WAAW,CAAC;AAC9DS,IAAAA;AAD8D,GAAD,CAAjE;;AAIA;AAAA,sBAASG,YAAY,EAArB;AAAA,4BACI,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAIH;;GAlBQR,I;UACgBH,W,EASiCF,W;;;KAVjDK,I;AAoBT,eAAeA,IAAf;AAEA,MAAMU,OAAO,GAAGZ,MAAM,CAACC,SAAD,CAAY,EAAlC;MAAMW,O;AAEN,MAAMC,mBAAmB,GAAGf,GAAI;AAChC;AACA;AACA;AACA,CAJA;AAMA,MAAMO,WAAW,GAAGP,GAAI;AACxB;AACA;AACA;AACA,CAJA","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport styled from \"styled-components\";\r\nimport { AddCircle } from \"@styled-icons/fluentui-system-regular/AddCircle\";\r\n\r\n// function Drop({ channelName }) {\r\n//     const [uploadFile] = useMutation(CREATE_FILE);\r\n//     const onDrop = async ([file]) => {\r\n//         await uploadFile({\r\n//             variables: {\r\n//                 channelName: channelName,\r\n//                 file: file,\r\n//             },\r\n//         });\r\n//     };\r\n\r\n//     const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n//     return (\r\n//         <div {...getRootProps()}>\r\n//             <input {...getInputProps()} />\r\n//             <AddIcon size=\"48\" />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nfunction Drop({ channelName }) {\r\n    const [uploadFile] = useMutation(CREATE_FILE);\r\n\r\n    const onDrop = useCallback(\r\n        ([file]) => {\r\n            uploadFile({ variables: { file } });\r\n        },\r\n        [uploadFile]\r\n    );\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n    });\r\n\r\n    <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <AddIcon />\r\n    </div>;\r\n}\r\n\r\nexport default Drop;\r\n\r\nconst AddIcon = styled(AddCircle)``;\r\n\r\nconst CREATE_FILE_MESSAGE = gql`\r\n    mutation CreateFileMessage($channelName: String!, $file: Upload!) {\r\n        createFileMessage(input: { channelName: $channelName, file: $file })\r\n    }\r\n`;\r\n\r\nconst CREATE_FILE = gql`\r\n    mutation CreateFile($file: Upload!) {\r\n        createFile(picture: $file)\r\n    }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}