{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\routes\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Form, Message, Button, Input, Container, Header } from \"semantic-ui-react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CREATE_USER = gql`\n    mutation Register($username: String!, $password: String!) {\n        register(options: { username: $username, password: $password }) {\n            user {\n                username\n            }\n            errors {\n                message\n            }\n        }\n    }\n`;\n\nfunction Register() {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [createUser] = useMutation(CREATE_USER, {\n    onCompleted() {\n      console.log(\"register\");\n    }\n\n  });\n\n  const onSubmit = async data => await createUser({\n    variables: data\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"username\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"+PhGFaEUGoZhqY4RHeV+hMGYJDQ=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/code3/web/src/routes/Register.js"],"names":["React","useForm","Form","Message","Button","Input","Container","Header","gql","useMutation","CREATE_USER","Register","register","handleSubmit","createUser","onCompleted","console","log","onSubmit","data","variables"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SACIC,IADJ,EAEIC,OAFJ,EAGIC,MAHJ,EAIIC,KAJJ,EAKIC,SALJ,EAMIC,MANJ,QAOO,mBAPP;AAQA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;;;AAEA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,SAASG,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BZ,OAAO,EAA1C;AACA,QAAM,CAACa,UAAD,IAAeL,WAAW,CAACC,WAAD,EAAc;AAC1CK,IAAAA,WAAW,GAAG;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;;AAHyC,GAAd,CAAhC;;AAMA,QAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB,MAAML,UAAU,CAAC;AAAEM,IAAAA,SAAS,EAAED;AAAb,GAAD,CAAjD;;AAEA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEN,YAAY,CAACK,QAAD,CAA5B;AAAA,8BACI,sBAAWN,QAAQ,CAAC,UAAD;AAAnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,sBAAWA,QAAQ,CAAC,UAAD;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH;;GAnBQD,Q;UAC8BV,O,EACdQ,W;;;KAFhBE,Q;AAqBT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport {\r\n    Form,\r\n    Message,\r\n    Button,\r\n    Input,\r\n    Container,\r\n    Header,\r\n} from \"semantic-ui-react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_USER = gql`\r\n    mutation Register($username: String!, $password: String!) {\r\n        register(options: { username: $username, password: $password }) {\r\n            user {\r\n                username\r\n            }\r\n            errors {\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction Register() {\r\n    const { register, handleSubmit } = useForm();\r\n    const [createUser] = useMutation(CREATE_USER, {\r\n        onCompleted() {\r\n            console.log(\"register\");\r\n        },\r\n    });\r\n\r\n    const onSubmit = async (data) => await createUser({ variables: data });\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input {...register(\"username\")} />\r\n                <input {...register(\"password\")} />\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}