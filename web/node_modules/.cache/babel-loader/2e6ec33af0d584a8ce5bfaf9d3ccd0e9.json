{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\routes\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import {\n//     Form,\n//     Message,\n//     Button,\n//     Input,\n//     Container,\n//     Header,\n// } from \"semantic-ui-react\";\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CREATE_USER = gql`\n    mutation register($username: String!, $password: String!) {\n        register(\n            options: { username: $username, email: $email, password: $password }\n        ) {\n            user {\n                id\n                username\n                email\n            }\n            errors {\n                message\n            }\n        }\n    }\n`;\n\nfunction Register() {\n  _s();\n\n  const [name, setUsername] = useState(\"\");\n  const [pw, setPassword] = useState(\"\");\n  const [createUser, {\n    loading,\n    error\n  }] = useMutation(CREATE_USER, {\n    onCompleted() {\n      console.log(\" createUser \");\n    }\n\n  });\n\n  const onSubmit = async () => {\n    await createUser({\n      variables: {\n        username: name,\n        password: pw\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => setUsername(value),\n      placeholder: \"new username\",\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: pw,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => setPassword(value),\n      placeholder: \"new password\",\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmit,\n      disabled: loading,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Register, \"IK9XT8FKC68QB2keg5+HFqS2gRA=\", false, function () {\n  return [useMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/code3/web/src/routes/Register.js"],"names":["React","useState","gql","useMutation","CREATE_USER","Register","name","setUsername","pw","setPassword","createUser","loading","error","onCompleted","console","log","onSubmit","variables","username","password","target","value","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;;;AAEA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;;AAiBA,SAASG,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,WAAP,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,EAAD,EAAKC,WAAL,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,UAAD,EAAa;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAb,IAAmCT,WAAW,CAACC,WAAD,EAAc;AAC9DS,IAAAA,WAAW,GAAG;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;;AAH6D,GAAd,CAApD;;AAMA,QAAMC,QAAQ,GAAG,YAAY;AACzB,UAAMN,UAAU,CAAC;AAAEO,MAAAA,SAAS,EAAE;AAAEC,QAAAA,QAAQ,EAAEZ,IAAZ;AAAkBa,QAAAA,QAAQ,EAAEX;AAA5B;AAAb,KAAD,CAAhB;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AACI,MAAA,KAAK,EAAEF,IADX;AAEI,MAAA,QAAQ,EAAE,CAAC;AAAEc,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAAD,KAA2Bd,WAAW,CAACc,KAAD,CAFpD;AAGI,MAAA,WAAW,EAAC,cAHhB;AAII,MAAA,QAAQ,EAAEV;AAJd;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AACI,MAAA,KAAK,EAAEH,EADX;AAEI,MAAA,QAAQ,EAAE,CAAC;AAAEY,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAAD,KAA2BZ,WAAW,CAACY,KAAD,CAFpD;AAGI,MAAA,WAAW,EAAC,cAHhB;AAII,MAAA,QAAQ,EAAEV;AAJd;AAAA;AAAA;AAAA;AAAA,YARJ,eAeI;AAAQ,MAAA,OAAO,EAAEK,QAAjB;AAA2B,MAAA,QAAQ,EAAEL,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,EAkBKC,KAAK,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAEU,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBd;AAAA,kBADJ;AAsBH;;GAnCQjB,Q;UAGoCF,W;;;KAHpCE,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n// import {\r\n//     Form,\r\n//     Message,\r\n//     Button,\r\n//     Input,\r\n//     Container,\r\n//     Header,\r\n// } from \"semantic-ui-react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_USER = gql`\r\n    mutation register($username: String!, $password: String!) {\r\n        register(\r\n            options: { username: $username, email: $email, password: $password }\r\n        ) {\r\n            user {\r\n                id\r\n                username\r\n                email\r\n            }\r\n            errors {\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction Register() {\r\n    const [name, setUsername] = useState(\"\");\r\n    const [pw, setPassword] = useState(\"\");\r\n    const [createUser, { loading, error }] = useMutation(CREATE_USER, {\r\n        onCompleted() {\r\n            console.log(\" createUser \");\r\n        },\r\n    });\r\n\r\n    const onSubmit = async () => {\r\n        await createUser({ variables: { username: name, password: pw } });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                value={name}\r\n                onChange={({ target: { value } }) => setUsername(value)}\r\n                placeholder=\"new username\"\r\n                disabled={loading}\r\n            />\r\n\r\n            <input\r\n                value={pw}\r\n                onChange={({ target: { value } }) => setPassword(value)}\r\n                placeholder=\"new password\"\r\n                disabled={loading}\r\n            />\r\n\r\n            <button onClick={onSubmit} disabled={loading}>\r\n                추가\r\n            </button>\r\n            {error && <p style={{ color: \"red\" }}>Error :(</p>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}