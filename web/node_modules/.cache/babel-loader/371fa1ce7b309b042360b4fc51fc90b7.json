{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\routes\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Form, Button, Input, Container, Header, Message } from \"semantic-ui-react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_USER = gql`\n    mutation Register($username: String!, $password: String!) {\n        register(options: { username: $username, password: $password }) {\n            user {\n                username\n            }\n            errors {\n                field\n            }\n        }\n    }\n`;\n\nfunction Register({\n  history\n}) {\n  _s();\n\n  const [err, setErr] = useState(\"\");\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [createUser] = useMutation(CREATE_USER, {\n    onCompleted({\n      register: {\n        user,\n        errors\n      }\n    }) {\n      user ? history.push(\"/\") : setErr(errors[0].field);\n    }\n\n  });\n\n  const onSubmit = async data => await createUser({\n    variables: data\n  });\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    text: true,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        error: !!err,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"username\",\n          type: \"username\",\n          placeholder: \"Username\",\n          fluid: true,\n          ...register(\"username\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password\",\n          ...register(\"password\"),\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), err ? /*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        header: \"Register Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"nuLIbAXMwm3G0nBJCsBx8JcGXKU=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/code3/web/src/routes/Register.js"],"names":["React","useState","useForm","Form","Button","Input","Container","Header","Message","gql","useMutation","CREATE_USER","Register","history","err","setErr","register","handleSubmit","createUser","onCompleted","user","errors","push","field","onSubmit","data","variables"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,MALJ,EAMIC,OANJ,QAOO,mBAPP;AAQA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;;AAEA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,SAASG,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAC3B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM;AAAEe,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6Bf,OAAO,EAA1C;AACA,QAAM,CAACgB,UAAD,IAAeR,WAAW,CAACC,WAAD,EAAc;AAC1CQ,IAAAA,WAAW,CAAC;AAAEH,MAAAA,QAAQ,EAAE;AAAEI,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAZ,KAAD,EAAiC;AACxCD,MAAAA,IAAI,GAAGP,OAAO,CAACS,IAAR,CAAa,GAAb,CAAH,GAAuBP,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,CAAUE,KAAX,CAAjC;AACH;;AAHyC,GAAd,CAAhC;;AAMA,QAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB,MAAMP,UAAU,CAAC;AAAEQ,IAAAA,SAAS,EAAED;AAAb,GAAD,CAAjD;;AAEA,sBACI,QAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAER,YAAY,CAACO,QAAD,CAA5B;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE,CAAC,CAACV,GAArB;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAC,UAHhB;AAII,UAAA,KAAK,MAJT;AAAA,aAKQE,QAAQ,CAAC,UAAD;AALhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,IAAD,CAAM,KAAN;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAC,UAHhB;AAAA,aAIQA,QAAQ,CAAC,UAAD,CAJhB;AAKI,UAAA,KAAK;AALT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,EAoBKF,GAAG,gBAAG,QAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,MAAM,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAH,GAAuD,IApB/D,eAqBI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAvCQF,Q;UAE8BV,O,EACdQ,W;;;KAHhBE,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n    Form,\r\n    Button,\r\n    Input,\r\n    Container,\r\n    Header,\r\n    Message,\r\n} from \"semantic-ui-react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_USER = gql`\r\n    mutation Register($username: String!, $password: String!) {\r\n        register(options: { username: $username, password: $password }) {\r\n            user {\r\n                username\r\n            }\r\n            errors {\r\n                field\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction Register({ history }) {\r\n    const [err, setErr] = useState(\"\");\r\n    const { register, handleSubmit } = useForm();\r\n    const [createUser] = useMutation(CREATE_USER, {\r\n        onCompleted({ register: { user, errors } }) {\r\n            user ? history.push(\"/\") : setErr(errors[0].field);\r\n        },\r\n    });\r\n\r\n    const onSubmit = async (data) => await createUser({ variables: data });\r\n\r\n    return (\r\n        <Container text>\r\n            <Header as=\"h2\">Register</Header>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Form.Field error={!!err}>\r\n                    <Input\r\n                        name=\"username\"\r\n                        type=\"username\"\r\n                        placeholder=\"Username\"\r\n                        fluid\r\n                        {...register(\"username\")}\r\n                    />\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                    <Input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        {...register(\"password\")}\r\n                        fluid\r\n                    />\r\n                </Form.Field>\r\n                {err ? <Message error header=\"Register Error\"></Message> : null}\r\n                <Button type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}