{"ast":null,"code":"var _jsxFileName = \"C:\\\\code3\\\\web\\\\src\\\\routes\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Message, Button, Input, Container, Header } from \"semantic-ui-react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_USER = gql`\n    mutation createUser(\n        $username: String!\n        $email: String!\n        $password: String!\n    ) {\n        createUser(\n            options: { username: $username, email: $email, password: $password }\n        ) {\n            user {\n                id\n                username\n                email\n            }\n            errors {\n                message\n            }\n        }\n    }\n`;\n\nfunction Register() {\n  _s();\n\n  let input;\n  const [addTodo, {\n    data\n  }] = useMutation(ADD_TODO);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        addTodo({\n          variables: {\n            type: input.value\n          }\n        });\n        input.value = \"\";\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: node => {\n          input = node;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"WjvA9C4j+1US3xWW8JvTrGZEkWc=\", false, function () {\n  return [useMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/code3/web/src/routes/Register.js"],"names":["React","useEffect","useState","Form","Message","Button","Input","Container","Header","gql","useMutation","CREATE_USER","Register","input","addTodo","data","ADD_TODO","e","preventDefault","variables","type","value","node"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACIC,IADJ,EAEIC,OAFJ,EAGIC,MAHJ,EAIIC,KAJJ,EAKIC,SALJ,EAMIC,MANJ,QAOO,mBAPP;AAQA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;;AAEA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;;AAqBA,SAASG,QAAT,GAAoB;AAAA;;AAChB,MAAIC,KAAJ;AACA,QAAM,CAACC,OAAD,EAAU;AAAEC,IAAAA;AAAF,GAAV,IAAsBL,WAAW,CAACM,QAAD,CAAvC;AAEA,sBACI;AAAA,2BACI;AACI,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAJ,QAAAA,OAAO,CAAC;AAAEK,UAAAA,SAAS,EAAE;AAAEC,YAAAA,IAAI,EAAEP,KAAK,CAACQ;AAAd;AAAb,SAAD,CAAP;AACAR,QAAAA,KAAK,CAACQ,KAAN,GAAc,EAAd;AACH,OALL;AAAA,8BAOI;AACI,QAAA,GAAG,EAAGC,IAAD,IAAU;AACXT,UAAAA,KAAK,GAAGS,IAAR;AACH;AAHL;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAtBQV,Q;UAEuBF,W;;;KAFvBE,Q;AAwBT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Form,\r\n    Message,\r\n    Button,\r\n    Input,\r\n    Container,\r\n    Header,\r\n} from \"semantic-ui-react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_USER = gql`\r\n    mutation createUser(\r\n        $username: String!\r\n        $email: String!\r\n        $password: String!\r\n    ) {\r\n        createUser(\r\n            options: { username: $username, email: $email, password: $password }\r\n        ) {\r\n            user {\r\n                id\r\n                username\r\n                email\r\n            }\r\n            errors {\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction Register() {\r\n    let input;\r\n    const [addTodo, { data }] = useMutation(ADD_TODO);\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addTodo({ variables: { type: input.value } });\r\n                    input.value = \"\";\r\n                }}\r\n            >\r\n                <input\r\n                    ref={(node) => {\r\n                        input = node;\r\n                    }}\r\n                />\r\n                <button type=\"submit\">Add Todo</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}